class Node {
  constructor(data) {
    this.data = data;
    this.link = null;
  }
}

class Queue {
  constructor() {
    this.front = null;
    this.rear = null;
  }

  // Get the size of the queue
  size() {
    let s = 0;
    let p = this.front;
    while (p !== null) {
      s++;
      p = p.link;
    }
    return s;
  }

  // Insert an element into the queue
  insert(x) {
    const temp = new Node(x);

    if (this.front === null) {
      // If queue is empty
      this.front = temp;
    } else {
      this.rear.link = temp;
    }
    this.rear = temp;
  }

  // Delete an element from the queue
  delete() {
    if (this.isEmpty()) {
      console.log("Queue Underflow");
      throw new Error("No elements in the queue");
    }

    const x = this.front.data;
    this.front = this.front.link;
    if (this.front === null) {
      this.rear = null;
    }
    return x;
  }

  // Get the front element of the queue without removing it
  peek() {
    if (this.isEmpty()) {
      console.log("Queue Underflow");
      throw new Error("No elements in the queue");
    }

    return this.front.data;
  }

  // Check if the queue is empty
  isEmpty() {
    return this.front === null;
  }

  // Display the contents of the queue
  display() {
    let p = this.front;
    if (this.isEmpty()) {
      console.log("Queue is empty");
      return;
    }

    console.log("Queue is : ");
    while (p !== null) {
      console.log(p.data, " ");
      p = p.link;
    }
    console.log();
  }
}
